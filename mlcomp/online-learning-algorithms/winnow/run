#! /usr/bin/env python

import sys
import util

weights = {}
legalLabels = []
learningrate = 1
numupdates = 0
alpha = 2

def initialize():
    global legalLabels
    legalLabels = [1,]
    for l in legalLabels:
        weights[l] = util.Counter()

def classify(data):
    vectors = util.Counter()
    for l in legalLabels:
        vectors[l] = weights[l] * data
    return vectors.argMax()

def update(label, guess, data):
    global numupdates
    numupdates += 1
    if guess != label:
        if not label in legalLabels:
            legalLabels.append(label)
            weights[label] = util.Counter()
        weights[label].divideAll(alpha)
        weights[guess].divideAll(float(1)/alpha)


sys.stderr.write('Started')
line = sys.stdin.readline()
initialize()
while (line):
    features_values = line.split(" ")
    
    c = util.Counter()
    for feature, value in [(n, y.strip()) for n, y in [x.split(":") for x in features_values]]:
        c[int(feature)] = float(value)

    guess = classify(c)
    sys.stdout.write(str(guess) + "\n")
    sys.stdout.flush()

    label = int(sys.stdin.readline().strip())

    update(label, guess, c)
    line = sys.stdin.readline()
